<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
         
         <!-- 用annotation自动注入bean -->
         <context:component-scan base-package="com"/>
         
         <!--对标注@Transactional注解的bean，进行加工处理，比边组织事物管理切面，
         	只有配置这个才可以使用annotation声明事务 -->
		 <!-- proxy-target-class=true,说明使用CGLib动态代理 -->
		 <tx:annotation-driven transaction-manager="txManager"
			proxy-target-class="true" />
         
         <!--加载属性文件方式一:使用context命名空间的配置引用属性文件 -->
		<context:property-placeholder
			location="classpath:/jdbc.properties"
			file-encoding="utf8" />
		<bean id="utf8" class="java.lang.String">
			<constructor-arg value="utf-8" />
		</bean>
		
		<!--加载属性文件方式一:使用传统的“属性文件占位符配置类”PropertyPlaceholderConfigurer引用属性文件 -->
	<!-- <bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:fileEncoding="utf-8">
		<property name="locations">
			<list>
				<value>classpath:com/springioc/placeholder/jdbc.properties</value>
			</list>
		</property>
	</bean> -->
	
	<!-- 使用占位符，加载DataSource-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" 
		p:driverClassName="${driverClassName}" 
		p:url="${url}"
		p:username="${username}" 
		p:password="${password}" />
	
	<!-- 配置生成JdbcTemplete -->
	<bean id="jdbcTemplate" 
			class="org.springframework.jdbc.core.JdbcTemplate"
			p:dataSource-ref="dataSource"/>
	
	<!-- 配置生成事务管理器，spring对事务的管理需基于相应的事务管理器实现 -->
	<bean id="txManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
			p:dataSource-ref="dataSource"/>

</beans>         